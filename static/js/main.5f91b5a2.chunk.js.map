{"version":3,"sources":["components/Phonebook/Phonebook.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["Phonebook","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","id","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","type","onChange","pattern","title","required","Component","Contacts","addList","map","onClick","onDelete","Filter","App","contacts","filter","availabilityProof","data","newValue","toLowerCase","ability","find","contact","includes","undefined","alert","onSubmitHandler","prev","onFilterChange","getFilterRender","normalizedFilter","deleteId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f91b5a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Phonebook.css\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"Label\" htmlFor={this.nameInputId}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"Input\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          id={this.nameInputId}\r\n          required\r\n        />\r\n        <label className=\"Label\" htmlFor={this.numberInputId}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className=\"Input\"\r\n          type=\"tel\"\r\n          onChange={this.handleChange}\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          id={this.numberInputId}\r\n          required\r\n        />\r\n        <button className=\"Button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nPhonebook.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Phonebook;\r\n","import React, { Component } from \"react\";\r\nimport \"./Contacts.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"Contacts__list\">\r\n        {this.props.addList.map(({ name, number, id }) => {\r\n          return (\r\n            <li key={id} className=\"Contacts__item\">\r\n              <span className=\"Contacts__text\">\r\n                {name}: {number}\r\n              </span>\r\n              <button\r\n                className=\"Contacts__button-delete\"\r\n                type=\"button\"\r\n                onClick={() => this.props.onDelete(id)}\r\n              >\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  addList: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport \"./Filter.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"Filter__label\">\r\n    <span className=\"Filter__text\">Find contacts by name</span>\r\n    <input\r\n      className=\"Filter__input\"\r\n      type=\"text\"\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Phonebook from \"./components/Phonebook\";\nimport Contacts from \"./components/Contacts\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {      \n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  availabilityProof = (data) => {\n    const newValue = data.name.toLowerCase();\n\n    const ability = this.state.contacts.find((contact) =>\n      contact.name.toLowerCase().includes(newValue)\n    );\n\n    ability !== undefined\n      ? alert(`${ability.name} is already in contacts`)\n      : this.onSubmitHandler(data);\n  };\n\n  onSubmitHandler = (data) => {\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, data],\n    }));\n  };\n\n  onFilterChange = (e) => {\n    const { value } = e.currentTarget;\n    this.setState({\n      filter: value,\n    });\n  };\n\n  getFilterRender = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  onDelete = (deleteId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== deleteId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getFilterRender();\n\n    return (\n      <>\n        <h1 className=\"Title\">Phonebook</h1>\n        <Phonebook onSubmit={this.availabilityProof} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.onFilterChange} value={filter} />\n        <Contacts addList={visibleContacts} onDelete={this.onDelete} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}